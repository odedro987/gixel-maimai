package main

var Time float
var Color1 vec3
var Color2 vec3

func torus(p vec2) float {
  innerRadius := 0.15
  r := 1-innerRadius
  return abs(length(p)-r) - innerRadius
}

func Fragment(_ vec4, texCoords vec2, _ vec4) vec4 {
    origin, size := imageSrcRegionOnTexture()
    uv := (texCoords - origin) / size * 2 - 1
  
    d := torus(uv)+0.025
    // Inner color with time
    angle := ((atan2(uv.y, uv.x) + Time) / 6.28) + 0.5
    clr := mix(Color1 / 255, Color2 / 255, mod(angle * 4, 1))
    // White strip
    clr = mix(clr, vec3(1), min(smoothstep(0, 0.05, d+0.075)*2, 1))
    // Outside discard
    outside := (1-smoothstep(0, 0.025, d))
    // Black outline
    clr *= (1-smoothstep(0.05, 0, abs(d)))
    
    return vec4(clr, 1)*outside
}